{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "Georchestra - Plugin Plui'Evolution' API",
		"contact": {
			"email": "thomas.brule@open-groupe.com"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"host": "",
	"basePath": "/",
	"tags": [
		{
			"name": "administration",
			"description": "Administration de la plateforme"
		},
		{
			"name": "user",
			"description": "Services de gestion des utilisateurs"
		},
		{
			"name": "request",
			"description": "Services de gestion des demandes"
		},
		{
			"name": "geographic",
			"description": "Service de recuperation des geographics"
		},
		{
			"name": "carto",
			"description": "Service de gestion des requetes cartographiques"
		}
	],
	"schemes": [
		"https",
		"http"
	],
	"paths": {
		"/administration/configuration": {
			"get": {
				"tags": [
					"administration"
				],
				"summary": "Récupération des propriétés de configuration",
				"description": "Ensemble des propriétés de configuration",
				"operationId": "getConfiguration",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConfigurationData"
						}
					}
				}
			}
		},
		"/administration/initialize": {
			"get": {
				"tags": [
					"administration"
				],
				"summary": "Initialisation applicatives",
				"description": "Initialisation applicatives",
				"operationId": "initialize",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					}
				}
			}
		},
		"/user/me":{
			"get": {
				"tags": [
					"user"
				],
				"summary": "Récupération des données de l'utilisateur connecté",
				"description": "",
				"operationId": "getMe",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/user/etablissement":{
			"get": {
				"tags": [
					"user"
				],
				"summary": "Récupération de l'établissement auquel est asocié le user courant",
				"operationId": "getCurrentUserEtablissement",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GeographicEtablissement"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/attachment/configuration": {
			"get": {
				"tags": [
					"attachment"
				],
				"summary": "Lister la configuration liées aux pièces jointes",
				"description": "Lister la configuration liées aux pièces jointes",
				"operationId": "getAttachmentConfiguration",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AttachmentConfiguration"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/attachment/{idAttachment}/download": {
			"get": {
				"tags": [
					"attachment"
				],
				"summary": "Téléchargement d'une pièce jointe redmimne",
				"description": "Téléchargement d'une pièce jointe redmimne",
				"operationId": "downLoadAttachment",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "path",
						"name": "idAttachment",
						"description": "Identifiant du fichier dans redmine",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "file"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/request/{uuid}/upload": {
			"post": {
				"tags": [
					"request"
				],
				"summary": "Téléversement d'une pièce jointe sur une demande",
				"description": "",
				"operationId": "uploadDocument",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Identifiant de la demande",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"in": "formData",
						"name": "file",
						"description": "Pièce jointe sous la forme d'un blob",
						"required": true,
						"type": "file"
					}
				],
				"consumes": [
					"multipart/form-data",
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Attachment"
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/request/{uuid}/attachments": {
			"get": {
				"tags": [
					"request"
				],
				"summary": "Récupération de la liste des pièces jointes d'une demande",
				"description": "",
				"operationId": "getAttachementsByPluiRequestUuid",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Identifiant de la demande",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Attachment"
							}
						}
					},
					"400": {
						"description": "bad input parameter"
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/request": {
			"post": {
				"summary": "Création d'une nouvelle demande",
				"tags": [
					"request"
				],
				"description": "Permet de créer une nouvelle demande",
				"operationId": "createPluiRequest",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "body",
						"name": "pluiRequest",
						"description": "Demande à créer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PluiRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Demande créée",
						"schema": {
							"$ref": "#/definitions/PluiRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"put": {
				"summary": "Maj d'une demande",
				"tags": [
					"request"
				],
				"description": "Permet de mettre à jour une demande",
				"operationId": "updatePluiRequest",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "body",
						"name": "pluiRequest",
						"description": "Demande à metre à jour",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PluiRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Demande mise à jour",
						"schema": {
							"$ref": "#/definitions/PluiRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/request/{uuid}": {
			"get": {
				"summary": "Récupération d'une demande spécifique en fonction de son uuid",
				"tags": [
					"request"
				],
				"description": "Permet d'obtenir une demande à partir de son uuid",
				"operationId": "getPluiRequestByUuid",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Uuid de la demande",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "Demande trouvée",
						"schema": {
							"$ref": "#/definitions/PluiRequest"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			},
			"delete": {
				"summary": "Suppression d'une demande",
				"tags": [
					"request"
				],
				"description": "Permet de supprimer une demande à partir de son uuid",
				"operationId": "deletePluiRequest",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"description": "Uuid de la demande à supprimer",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/carto/wmsRequest": {
			"get": {
				"summary": "Requete WMS",
				"tags": [
					"carto"
				],
				"description": "Requete WMS de recuperation des request auxquelles le user courant a accès",
				"operationId": "getWms",
				"produces": [
					"image/png", "*/*"
				],
				"responses": {
					"200": {
						"description": "Reponse du geoserver"
					}
				}
			}
		},
		"/carto/wfsRequest": {
			"get": {
				"summary": "Requete WFS get (essentiellement pour la description des features)",
				"tags": [
					"carto"
				],
				"description": "Requete WFS de récupération des informations sur le service",
				"operationId": "getWfs",
				"produces": [
					"application/json", "text/plain", "text/html", "application/octet-stream", "application/xml", "*/*"
				],
				"responses": {
					"200": {
						"description": "Reponse du geoserver",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"post": {
				"summary": "Requete WFS post (notamment pour les features)",
				"tags": [
					"carto"
				],
				"description": "Requete WFS de recuperation d'un claque",
				"operationId": "postWfs",
				"produces": [
					"application/json", "text/plain", "text/html", "application/octet-stream", "application/xml", "*/*"
				],
				"parameters": [
					{
						"in": "body",
						"name": "wfsContent",
						"description": "Contenu WFS au format XML",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/carto/layerConfiguration": {
			"get": {
				"tags": [
					"carto"
				],
				"summary": "Configurations du layer geoserver",
				"operationId": "getLayerConfigurations",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Configuration du layer",
						"schema": {
							"$ref": "#/definitions/LayerConfiguration"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographic/etablissements": {
			"get": {
				"tags": [
					"geographic"
				],
				"summary": "Liste des mairies de communes, plus ville et métropole, d'où les demandes peuvent être émises",
				"operationId": "searchEtablissements",
				"produces": [
					"application/json;charset=utf-8"
				],
				"responses": {
					"200": {
						"description": "Liste des mairies de communes + ville + metropole",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GeographicEtablissement"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographic/configuration": {
			"get": {
				"tags": [
					"geographic"
				],
				"summary": "Configuration des établissements",
				"operationId": "getEtablissementConfiguration",
				"produces": [
					"application/json;charset=utf-8"
				],
				"responses": {
					"200": {
						"description": "Configuration des établissements",
						"schema": {
							"$ref": "#/definitions/EtablissementConfiguration"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographic/areas": {
			"get": {
				"tags": [
					"geographic"
				],
				"summary": "Liste des emprises de communes, plus ville et métropole, d'où les demandes peuvent être émises",
				"operationId": "getAllPluiRequestAreas",
				"produces": [
					"application/json;charset=utf-8"
				],
				"responses": {
					"200": {
						"description": "Liste des emprises de communes + ville + metropole",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GeographicArea"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographic/areas/{codeInsee}": {
			"get": {
				"tags": [
					"geographic"
				],
				"summary": "Emprises d'une communes ou ville où métropole à partir de son code Insee",
				"operationId": "getPluiRequestAreaByCodeInsee",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "path",
						"name": "codeInsee",
						"description": "Code insee de la geographique area",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Emprises de commune | ville | metropole",
						"schema": {
							"$ref": "#/definitions/GeographicArea"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		},
		"/geographic/etablissements/{codeInsee}": {
			"get": {
				"tags": [
					"geographic"
				],
				"summary": "Hotel de ville d'une commune (ou Rennes Metropole) par son code insee",
				"operationId": "getPluiRequestEtablissementByCodeInsee",
				"produces": [
					"application/json;charset=utf-8"
				],
				"parameters": [
					{
						"in": "path",
						"name": "codeInsee",
						"description": "Code insee du geographique etablissement",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Hotel de ville | metropole",
						"schema": {
							"$ref": "#/definitions/GeographicEtablissement"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ApiError"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"ApiError": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"label": {
					"type": "string"
				}
			}
		},
		"ConfigurationData": {
			"type": "object",
			"properties": {
				"version": {
					"type": "string"
				}
			}
		},
		"Attachment": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"mimeType": {
					"type": "string"
				}
			}
		},
		"AttachmentConfiguration": {
			"type": "object",
			"properties": {
				"maxSize": {
					"type": "integer",
					"format": "int64"
				},
				"maxCount": {
					"type": "integer",
					"format": "int32"
				},
				"mimeTypes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"LayerConfiguration": {
			"type": "object",
			"properties": {
				"layerWorkspace": {
					"type": "string"
				},
				"layerName": {
					"type": "string"
				}
			}
		},
		"LayerConfiguration": {
			"type": "object",
			"properties": {
				"layerWorkspace": {
					"type": "string"
				},
				"layerName": {
					"type": "string"
				},
				"layerProjection": {
					"type": "string"
				}
			}
		},
		"EtablissementConfiguration": {
			"type": "object",
			"properties": {
				"organisationRm": {
					"type": "string"
				},
				"codeInseeRm": {
					"type": "string"
				}
			}
		},
		"User": {
			"type": "object",
			"properties": {
				"login": {
					"type": "string"
				},
				"firstName": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"organization": {
					"type": "string"
				},
				"roles":{
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"GeometryType": {
			"type": "string",
			"description": "the geometry type",
			"enum": [
				"Point",
				"LineString",
				"Polygon",
				"MultiPoint",
				"MultiLineString",
				"MultiPolygon"
			]
		},
		"Geometry": {
			"type": "object",
			"description": "GeoJSon geometry",
			"discriminator": "type",
			"properties": {
				"type": {
					"type": "object",
					"$ref": "#/definitions/GeometryType"
				},
				"projection": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"Point2D":{
			"type": "array",
			"maxItems": 2,
			"minItems": 2,
			"items":{
				"type": "number"
			}
		},
		"Point": {
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type": "object",
					"properties": {
						"coordinates": {
							"$ref": "#/definitions/Point2D"
						}
					}
				}
			]
		},
		"LineString":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"$ref": "#/definitions/Point2D"
							}
						}
					}
				}
			]
		},
		"Polygon":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"type": "array",
								"items":{
									"$ref": "#/definitions/Point2D"
								}
							}
						}
					}
				}
			]
		},
		"MultiPoint":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"$ref": "#/definitions/Point2D"
							}
						}
					}
				}
			]
		},
		"MultiLineString":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"type": "array",
								"items":{
									"$ref": "#/definitions/Point2D"
								}
							}
						}
					}
				}
			]
		},
		"MultiPolygon":{
			"type": "object",
			"description": "GeoJSon geometry",
			"allOf": [
				{"$ref": "#/definitions/Geometry"},
				{
					"type":"object",
					"properties": {
						"coordinates": {
							"type": "array",
							"items" : {
								"type": "array",
								"items":{
									"type": "array",
									"items":{
										"$ref": "#/definitions/Point2D"
									}
								}
							}
						}
					}
				}
			]
		},
		"GeometryCollection":{
			"type": "object",
			"description": "GeoJSon geometry collection",
			"properties": {
				"type": {
					"type": "string",
					"enum" : [ "GeometryCollection"]
				},
				"geometries":{
					"type": "array",
					"items":{
						"$ref": "#/definitions/Geometry"
					}
				}
			}
		},
		"Style": {
			"type": "object",
			"description": "GeoJSon feature style",
			"properties": {
				"color": {
					"type": "string"
				},
				"fillColor": {
					"type": "string"
				},
				"fillOpacity": {
					"type": "number",
					"format": "double"
				},
				"opacity": {
					"type": "number",
					"format": "double"
				},
				"iconColor": {
					"type": "string"
				},
				"iconGlyph": {
					"type": "string"
				},
				"iconShape": {
					"type": "string"
				},
				"weight": {
					"type": "number",
					"format": "double"
				},
				"geometry": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"iconAnchor": {
					"type": "array",
					"items":{
						"type": "number",
						"format": "double"
					}
				},
				"dashArray": {
					"type": "array",
					"items":{
						"type": "number",
						"format": "double"
					}
				},
				"filtering": {
					"type": "boolean"
				}
			}
		},
		"Feature":{
			"type": "object",
			"description": "GeoJSon feature",
			"properties": {
				"type": {
					"type": "string",
					"enum" : [ "Feature"]
				},
				"id":{
					"type": "string",
					"format": "uuid"
				},
				"geometry":{
					"$ref": "#/definitions/Geometry"
				},
				"style": {
					"type": "array",
					"items":{
						"$ref": "#/definitions/Style"
					}
				},
				"properties":{
					"type": "object"
				}
			}
		},
		"FeatureCollection":{
			"type": "object",
			"description": "GeoJSon feature collection",
			"properties": {
				"type": {
					"type": "string",
					"enum" : [ "FeatureCollection"]
				},
				"features":{
					"type": "array",
					"items":{
						"$ref": "#/definitions/Feature"
					}
				},
				"style": {
					"type": "array",
					"items":{
						"$ref": "#/definitions/Style"
					}
				}
			}
		},
		"FeatureProperty":{
			"type": "object",
			"description": "GeoJSon feature property description",
			"properties": {
				"name":{
					"type": "string"
				},
				"maxOccurs": {
					"type": "integer",
					"format": "int32"
				},
				"minOccurs": {
					"type": "integer",
					"format": "int32"
				},
				"nillable": {
					"type": "boolean"
				},
				"type": {
					"type": "string"
				},
				"localType": {
					"type": "string"
				}
			}
		},
		"FeatureType": {
			"type": "object",
			"description": "GeoJSon feature type",
			"properties": {
				"typeName":{
					"type": "string"
				},
				"properties":{
					"type": "array",
					"items": {
						"$ref": "#/definitions/FeatureProperty"
					}
				}
			}
		},
		"FeatureTypeDescription": {
			"type": "object",
			"description": "GeoJSon feature type description",
			"properties": {
				"elementFormDefault":{
					"type": "string"
				},
				"targetNamespace": {
					"type": "string"
				},
				"targetPrefix": {
					"type": "string"
				},
				"featureTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FeatureType"
					}
				}
			}
		},
		"PluiRequest": {
			"type": "object",
			"description": "Il s'agit de la representation d'une demande",
			"properties": {
				"uuid": {
					"type": "string",
					"format": "uuid"
				},
				"subject": {
					"type": "string"
				},
				"object": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				},
				"pluiProcedure": {
					"type": "string"
				},
				"initiator": {
					"type": "string"
				},
				"creationDate": {
					"type": "string",
					"format": "date"
				},
				"localisation": {
					"description": "Il s'agit de la localisation de la demande qui est un point",
					"$ref": "#/definitions/Point"
				},
				"status": {
					"description": "Statut de la demande",
					"$ref": "#/definitions/PluiRequestStatus"
				},
				"type": {
					"description": "Type de demande",
					"$ref": "#/definitions/PluiRequestType"
				},
				"codeInsee": {
					"type": "string"
				},
				"redmineId": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"Geographic": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"nom": {
					"type": "string"
				},
				"codeInsee": {
					"type": "string"
				}
			}
		},
		"GeographicEtablissement": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/Geographic"
				},
				{
					"type": "object",
					"properties": {
						"localisation": {
							"$ref": "#/definitions/Point"
						}
					}
				}
			]
		},
		"GeographicArea": {
			"type": "object",
			"allOf": [
				{
					"$ref": "#/definitions/Geographic"
				},
				{
					"type": "object",
					"properties": {
						"localisation": {
							"$ref": "#/definitions/Polygon"
						},
						"identifiantRedmine": {
							"type": "string"
						}
					}
				}
			]
		},
		"PluiRequestStatus": {
			"type": "string",
			"enum": [
				"STATUT_NOUVEAU",
				"STATUT_ANALYSE_EN_COURS",
				"STATUT_PRODUCTION_EN_COURS",
				"STATUT_EN_ATTENTE_VALIDATION_COMMUNE",
				"STATUT_VALIDE_COMMUNE",
				"STATUT_DEMANDE_NON_RECEVABLE",
				"STATUT_DEMANDE_REFORMULEE"
			]
		},
		"PluiRequestType": {
			"type": "string",
			"enum": [
				"TYPE_COMMUNE",
				"TYPE_INTERCOMMUNE",
				"TYPE_METROPOLITAIN"
			]
		}
	}
}
